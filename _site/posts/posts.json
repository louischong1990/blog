[
  {
    "path": "posts/2021-01-19-dataviz-makeover-1/",
    "title": "ISSS608 Visual Analytics - DataViz Makeover 1",
    "description": "Analysis of Data Visualisation in MOM's Report on Labour Force in Singapore.",
    "author": [
      {
        "name": "Louis Chong Jia Jun (louis.chong.2019@mitb.smu.edu.sg)",
        "url": "https://www.linkedin.com/in/louis-chong-jia-jun"
      }
    ],
    "date": "2021-01-19",
    "categories": [],
    "contents": "\r\n1.0 Critiques and Improvements of Data Visualisation\r\nThe Report on Labour Force in Singapore (https://stats.mom.gov.sg/Pages/Labour-Force-In-Singapore-2019.aspx) is a key annual report on Singapore’s labour market. Below is a critique of MOM’s data visualisation on the resident labour force and how it can be improved. The data is available at https://stats.mom.gov.sg/Pages/Labour-Force-Tables2019.aspx, Table 5, Resident Labour Force Participation Rate by Age and Sex, 2009 - 2019 (June), and Table 7, Resident Labour Force Aged Fifteen Years and Over by Age and Sex, 2009 - 2019 (June).\r\nFigure 1: MOM’s Data VisualisationClarity\r\nBy looking at the two lines (blue and grey) in the data visualisation, we can generally tell that the share of resident labour force aged 55 & over was higher in 2019 (blue line) than 2009 (grey line) and lower for residents aged 25 to 54, which were mentioned in the lead-in paragraph. However, a line chart should not be used, as data was aggregated at each age range and it would otherwise make readers imply that the share of resident labour force can be interpolated and calculated at each age.\r\nA scatter plot can be used instead, with each point showing the share of resident labour force at each age range.\r\n\r\nThe lead-in paragraph compared the 2009 and 2019 share of resident labour force aged 25 to 54 and 55 & over. However, it is hard for readers to tabulate and compare the total share of resident labour force for these age ranges, as the data values were mostly given in 5-year age range. Furthermore, having too many age ranges make comparison tedious as well as redundant when the data values are similar.\r\nFewer age ranges can be used (15 to 24, 25 to 54, 55 to 64 and 65 & over) for the scatter plot to improve readability and aid comparison. The share of resident labour force and labour force participation rate for these age ranges will be calculated using the available data.\r\n\r\nThe reference lines clearly showed that the median age of residents in the labour force was higher in 2019 than 2009. However, it gives a wrong impression that the share of resident labour force can be interpolated and calculated at each age.\r\nThe reference lines can be removed from the data visualisation to prevent confusion.\r\n\r\nThe lead-in paragraph talks about the labour force participation rate. However, we cannot tell from the data visualisation how the labour force participation rate in 2019 differs from 2009.\r\nThe labour force participation rate can be used as the size for each point on the scatter plot i.e. bigger point implies higher labour force participation rate at the age range.\r\n\r\nThe title of the data visualisation should not be “resident labour force by age”. It gives a false impression that we can interpolate and find the share of resident labour force at each age.\r\nThe title can be changed to “How did the Resident Labour Force (%) at each Age Range change from 2009 to 2019?” to correctly represent the data given and make it appealing.\r\n\r\nAesthetics\r\nThe use of two contrasting colours (blue and grey) for the lines and table rows clearly showed the data values belonging to the two years.\r\nFor the improved data visualisation, we can similarly use two contrasting colours for the scatter plot and data values.\r\n\r\nThe multiple labelling of “June 2009” and “June 2019” is not necessary, given the use of colours to differentiate the years.\r\nThe multiple labels can be removed and a legend can be created to show the colours (for the scatter plot and data values) that represent each year.\r\n\r\nThe tick marks on the x-axis are wrongly placed, inappropriate and confusing, as age range should be a categorical rather than a continuous variable. It gives a wrong impression that we can interpolate and find the share of resident labour force at each age.\r\nThe tick marks on the x-axis are not necessary and can be removed.\r\n\r\nThe data source is properly and clearly labelled at the bottom of the data visualisation.\r\nSimilarly, we can label the data source clearly in the improved data visualisation.\r\n\r\nSketch of Proposed Design\r\nFigure 2: Sketch of DesignThe first key message to convey is the change in the share of resident labour force from 2009 to 2019. Each point in the scatter plot represents the share of resident labour force at each age range and they are properly labelled with the data values. Readers will not be confused that the values can be interpolated at each age.\r\nThe next level of details to show readers is the labour force participation rate in 2009 and 2019. It can be easily compared by either looking at the size of the points or referring to the values in the table.\r\nAll points and data values are clearly shown and coloured according to the year.\r\n2.0 Step-by-Step Description of Data Visualisation Preparation\r\nData Preparation\r\nThe available data values from 2009 to 2019 for Resident Labour Force (RLF) and Labour Force Participation Rate (LFPR) are analysed. There is no notable change or spike in values between 2009 and 2019. Hence, the proposed data visualisation will focus on 2009 and 2019 values.\r\nThe 2009 and 2019 values for four age ranges (15 to 24, 25 to 54, 55 to 64, 65 & over) are collated in Excel. Additional calculations are required to convert LFPR from thousands to percentage (%).\r\nThe data values are then imported onto Tableau. The columns are renamed to appropriately represent the data values i.e. Age Range, RLF2009, RLF2019, LFPR2009, LFPR2019.\r\nFigure 3: Collated Data Values on ExcelFigure 4: Imported Data ValuesScatter Plot\r\n“Age Range” is placed under Columns and “RLF2009” and “RLF2019” are placed under Rows.\r\nThe bar charts are converted into scatter plot by clicking on dual axis. The axes are also synchronised.\r\nFigure 5: Scatter Plot Part 1To allow comparison of the labour force participation rate, “LFPR2009” and “LFPR2019” are placed under Size. The size of the points will reflect the labour force participation rate i.e. larger dot will indicate higher labour force participation rate.\r\nAs there are overlaps of the points, the opacity is set at 50% to allow easier comparison between the data values in 2009 and 2019. To further facilitate comparison, the size of the points is increased and contrasting colours (grey and blue) are used for 2009 and 2019 points after placing “Measure Names” under Colour.\r\nFigure 6: Scatter Plot Part 2“RLF2009” and “RLF2019” are placed under Label to show the RLF data values for 2009 and 2019. The labels are properly aligned and coloured according to the year.\r\nA legend is created using Annotation to show the colours that represent each year and therefore, multiple labelling is not required. The headers and field label for columns are also hidden to simplify the chart for readers and the dimensions of the chart are adjusted.\r\nFigure 7: Scatter Plot (Final)Data Table on Labour Force Participation Rate\r\n“Age Range” is placed under Columns and “LFPR2009” and “LFPR2019” are placed under Rows. Text Table under Show Me is clicked to generate the data table for LFPR. The rows and columns are swapped.\r\n“Measure Names” is placed under Colour and the font colours are changed to match the year.\r\nThe headers and field label for columns are hidden to simplify the chart for readers and reduce redundancy.\r\nFigure 8: LFPR DataDashboard\r\nA dashboard is created. The title, lead-in paragraph and source are added as text. The scatter plot and LFPR data table are added. Blanks are added to adjust the dashboard dimensions.\r\n3.0 Proposed Data Visualisation Using Tableau\r\nFigure 9: Tableau DesignMajor Observations\r\nA higher percentage of older residents was in the labour force in 2019. The share of resident labour force aged 55 & over rose from 15.7% in 2009 to 24.6% in 2019.\r\nThis was contributed by the higher labour force participation rate for residents aged 55 to 64 (69.9% in 2019 vs 60.6% in 2009) and residents aged 65 & over (28.7% in 2019 vs 17.2% in 2009).\r\nAt the same time, the share of resident labour force aged 25 to 54 fell from 75.4% in 2019 to 67.4% in 2019. This was despite having a higher labour force participation rate in 2019 (88.3%) than 2009 (84.5%).\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-26T17:55:55+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/2021-01-04-my-first-post/",
    "title": "My first post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Louis Chong Jia Jun",
        "url": "https://example.com/louischong"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coefficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coefficients of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-04-my-first-post/my-first-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-05T22:13:45+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Louis Chong Jia Jun",
        "url": "https://example.com/louischong"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-04T20:59:57+08:00",
    "input_file": {}
  }
]
