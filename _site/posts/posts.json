[
  {
    "path": "posts/2021-01-19-dataviz-makeover-1/",
    "title": "ISSS608 Visual Analytics - DataViz Makeover 1",
    "description": "Analysis of Data Visualisation in MOM's Report on Labour Force in Singapore.",
    "author": [
      {
        "name": "Louis Chong Jia Jun (louis.chong.2019@mitb.smu.edu.sg)",
        "url": "https://www.linkedin.com/in/louis-chong-jia-jun"
      }
    ],
    "date": "2021-01-19",
    "categories": [],
    "contents": "\r\n1.0 Critiques and Improvements of Data Visualisation\r\nThe Report on Labour Force in Singapore (https://stats.mom.gov.sg/Pages/Labour-Force-In-Singapore-2019.aspx) is a key annual report on Singapore’s labour market. Below is a critique of MOM’s data visualisation on the resident labour force and how it can be improved. The data is available at https://stats.mom.gov.sg/Pages/Labour-Force-Tables2019.aspx, Table 5, Resident Labour Force Participation Rate by Age and Sex, 2009 - 2019 (June).\r\nFigure 1: MOM’s Data VisualisationClarity\r\nBy looking at the two lines in the data visualisation, we can clearly tell that the share of residents aged 55 & over in the labour force rose in 2019 as compared to 2009 and fell for residents aged 25 to 54. However, a line chart should not be used, as data was aggregated at each age range and we will imply that we can interpolate and find the value at each age.\r\nA dot chart can be used instead, with each point showing the share of residents in the labour force at each age range.\r\n\r\nThe reference lines cleared showed that the median age of residents in the labour force was higher in 2019 than 2009. However, it also gives a wrong impression that the value at each age can be interpolated and found. Furthermore, the median age cannot be calculated using the data used in this exercise.\r\nThe reference lines can be removed to avoid confusion.\r\n\r\nThe lead-in paragraph talks about the labour force participation rate. However, we cannot tell from the data visualisation how the labour force participation rate in 2019 differs from 2009.\r\nThe labour force participation rate can be used as the size for each point on the dot chart i.e. bigger point implies higher labour force participation rate at the age range. We can also include the data values under tooltip.\r\n\r\nThe title of the data visualisation should not be “resident labour force by age”. It will also give the false impression that we can interpolate and find the value at each age.\r\nThe title can be changed to “Resident Labour Force (%) and Labour Force Participation Rate (%) by Age Range” to illustrate the data given.\r\n\r\nAesthetics\r\nThe use of two contrasting colours (blue and grey) for the lines and table rows clearly showed the data belonging to the two years.\r\nFor the improved data visualisation, we can similarly use two contrasting colours for the dot chart and data.\r\n\r\nThe multiple labelling of “June 2009” and “June 2019” is not necessary, given the use of colours to differentiate the years.\r\nThe multiple labels can be removed and a legend can be created to show the colours (for the dot chart and data) that represent each year.\r\n\r\nThe tick marks on the x-axis are wrongly placed, inappropriate and confusing, as age range should be a categorical rather than a continuous variable. This makes it difficult to find the value at each age range on the line chart and gives the wrong impression that we can interpolate and find the value at each age.\r\nThe tick marks on the x-axis can be removed.\r\n\r\nThe data source is properly and clearly labelled at the bottom of the data visualisation.\r\nSimilarly, we can label the data source clearly in the improved data visualisation.\r\n\r\nSketch of Proposed Design\r\nFigure 2: Sketch of DesignThe dot chart can show the share of residents in the labour force at each age range without confusing readers that the values can be interpolated at each age.\r\nThe labour force participation rate can be easily compared by looking at the size of the dots for the two years.\r\nFor each dot (or data point), the exact values of the share of resident labour force and labour force participation rate can be found under tooltip.\r\n2.0 Step-by-Step Description of Data Visualisation Preparation\r\nData Preparation\r\nThe relevant data values i.e. Share of Resident Labour Force (RLF) and Labour Force Participation Rate (LFPR) at all age ranges in 2009 and 2019 are collated in Excel and imported onto Tableau.\r\nFigure 3: Collated Data Values on ExcelFigure 4: Imported Data ValuesEach column is renamed to appropriately represent the data values i.e. Age Range, RLF 2009, RLF 2019, LFPR 2009, LFPR 2019.\r\nFigure 5: Imported Data Values with Renamed ColumnsDot Chart\r\n“Age Range” is placed under Columns and “RLF 2009” and “RLF 2019” are placed under Rows.\r\nFigure 6: Dot Chart Part 1The bar charts are converted into dot chart by clicking on dual axis. The axes are also synchronised.\r\nFigure 7: Dot Chart Part 2As the x-axis (Age Range) is vertically oriented, it’s not easily readable. Thus, the axis is rotated and the chart is set to fit the width.\r\nFigure 8: Dot Chart Part 3To allow comparison of the labour force participation rate, “LFPR 2009” and “LFPR 2019” are placed under Size. The size of the dots will reflect the labour force participation rate i.e. larger dot will indicate higher labour force participation rate.\r\nFigure 9: Dot Chart Part 4As there are overlaps of the dots, the opacity is set at 50% to allow easier comparison between the data values in 2009 and 2019.\r\nFigure 10: Dot Chart Part 5To further facilitate comparison of labour force participation rate between 2009 and 2019, the size of the dots is increased.\r\nFigure 11: Dot Chart Part 6Age Range, RLF, LFPR and the relevant period are added to Tooltip to let readers find the exact data values at each dot if required.\r\nFigure 12: Dot Chart Part 7A legend is created to show the colours that represent each year and therefore, multiple labelling is not required. The headers are also hidden to simplify the chart for readers.\r\nFigure 13: Dot Chart (Final)Data on Share of Resident Labour Force\r\n“Age Range” is placed under Columns and “RLF 2009” and “RLF 2019” are placed under Rows. “Show Me” is clicked to generate the data table for share of resident labour force. “Measure Names” is placed under Color to change the font color to match the year.\r\nFigure 14: RLF DataDashboard\r\nA dashboard is created. The title, lead-in paragraph and source are added as text. The dot chart and RLF data are added.\r\n3.0 Proposed Data Visualisation Using Tableau\r\nFigure 15: Tableau DesignMajor Observations\r\nThe share of resident labour force aged 55 & over rose from 15.6% in 2009 to 24.7% in 2019, with notable rise from 4.60% in 2009 to 7.30% in 2019 for residents aged 60 to 64 and from 1.80% in 2009 to 4.50% in 2019 for residents aged 65 to 69.\r\nThis was partly due to the higher labour force participation rate for residents aged 55 & over, most notably 63.90% in 2019 vs 50.60% in 2009 for residents aged 60 to 64, and 46.10% in 2019 vs 29.90% in 2009 for residents aged 65 to 69.\r\nThe labour force participation rate was generally higher in 2019 than 2009 for all age ranges except 20 to 24, which was 61.00% in 2019 vs 63.50% in 2009. Despite this, the overall share of resident labour force aged 25 to 54 declined from 75.3% to 67.5%.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-25T00:55:21+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/2021-01-04-my-first-post/",
    "title": "My first post",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Louis Chong Jia Jun",
        "url": "https://example.com/louischong"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coefficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coefficients of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-04-my-first-post/my-first-post_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-01-05T22:13:45+08:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Louis Chong Jia Jun",
        "url": "https://example.com/louischong"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-04T20:59:57+08:00",
    "input_file": {}
  }
]
